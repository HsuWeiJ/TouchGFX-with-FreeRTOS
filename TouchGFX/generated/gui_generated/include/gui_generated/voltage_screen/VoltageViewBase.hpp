/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef VOLTAGEVIEWBASE_HPP
#define VOLTAGEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/voltage_screen/VoltagePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>

class VoltageViewBase : public touchgfx::View<VoltagePresenter>
{
public:
    VoltageViewBase();
    virtual ~VoltageViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Voltage
    }

    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Voltage
    }

    virtual void VolToLog_Handle()
    {
        // Override and implement this function in Voltage
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::SlideMenu slideMenuLeft;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Tem;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Logout;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Home;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Vol;
    touchgfx::TextAreaWithOneWildcard textArea_Vol;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  Button_up;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger >  Button_down;
    touchgfx::TextAreaWithOneWildcard textArea_Duty;
    touchgfx::CircleProgress circleProgress_Duty;
    touchgfx::PainterRGB565Bitmap circleProgress_DutyPainter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_VOL_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textArea_VolBuffer[TEXTAREA_VOL_SIZE];
    static const uint16_t TEXTAREA_DUTY_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_DutyBuffer[TEXTAREA_DUTY_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<VoltageViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // VOLTAGEVIEWBASE_HPP
