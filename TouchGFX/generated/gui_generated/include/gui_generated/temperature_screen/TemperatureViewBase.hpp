/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TEMPERATUREVIEWBASE_HPP
#define TEMPERATUREVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/temperature_screen/TemperaturePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>

class TemperatureViewBase : public touchgfx::View<TemperaturePresenter>
{
public:
    TemperatureViewBase();
    virtual ~TemperatureViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void TemToLog_Handle()
    {
        // Override and implement this function in Temperature
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::SlideMenu slideMenuLeft;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Tem;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Logout;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Home;
    touchgfx::IconButtonStyle< touchgfx::TouchButtonTrigger >  Button_Vol;
    touchgfx::TextAreaWithOneWildcard textArea_Tem;
    touchgfx::TextAreaWithOneWildcard textArea_Hum;
    touchgfx::BoxProgress boxProgress_Tem;
    touchgfx::BoxProgress boxProgress_Hum;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_TEM_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_TemBuffer[TEXTAREA_TEM_SIZE];
    static const uint16_t TEXTAREA_HUM_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_HumBuffer[TEXTAREA_HUM_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TemperatureViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // TEMPERATUREVIEWBASE_HPP
